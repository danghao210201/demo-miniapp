{
  "version": 3,
  "sources": ["../../jotai/esm/vanilla/utils.mjs", "../../jotai/esm/react/utils.mjs"],
  "sourcesContent": ["import { atom } from 'jotai/vanilla';\r\n\r\nconst RESET = Symbol(\r\n  (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" ? \"RESET\" : \"\"\r\n);\r\n\r\nfunction atomWithReset(initialValue) {\r\n  const anAtom = atom(\r\n    initialValue,\r\n    (get, set, update) => {\r\n      const nextValue = typeof update === \"function\" ? update(get(anAtom)) : update;\r\n      set(anAtom, nextValue === RESET ? initialValue : nextValue);\r\n    }\r\n  );\r\n  return anAtom;\r\n}\r\n\r\nfunction atomWithReducer(initialValue, reducer) {\r\n  return atom(initialValue, function(get, set, action) {\r\n    set(this, reducer(get(this), action));\r\n  });\r\n}\r\n\r\nfunction atomFamily(initializeAtom, areEqual) {\r\n  let shouldRemove = null;\r\n  const atoms = /* @__PURE__ */ new Map();\r\n  const listeners = /* @__PURE__ */ new Set();\r\n  const createAtom = (param) => {\r\n    let item;\r\n    if (areEqual === void 0) {\r\n      item = atoms.get(param);\r\n    } else {\r\n      for (const [key, value] of atoms) {\r\n        if (areEqual(key, param)) {\r\n          item = value;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (item !== void 0) {\r\n      if (shouldRemove == null ? void 0 : shouldRemove(item[1], param)) {\r\n        createAtom.remove(param);\r\n      } else {\r\n        return item[0];\r\n      }\r\n    }\r\n    const newAtom = initializeAtom(param);\r\n    atoms.set(param, [newAtom, Date.now()]);\r\n    notifyListeners(\"CREATE\", param, newAtom);\r\n    return newAtom;\r\n  };\r\n  const notifyListeners = (type, param, atom) => {\r\n    for (const listener of listeners) {\r\n      listener({ type, param, atom });\r\n    }\r\n  };\r\n  createAtom.unstable_listen = (callback) => {\r\n    listeners.add(callback);\r\n    return () => {\r\n      listeners.delete(callback);\r\n    };\r\n  };\r\n  createAtom.getParams = () => atoms.keys();\r\n  createAtom.remove = (param) => {\r\n    if (areEqual === void 0) {\r\n      if (!atoms.has(param)) return;\r\n      const [atom] = atoms.get(param);\r\n      atoms.delete(param);\r\n      notifyListeners(\"REMOVE\", param, atom);\r\n    } else {\r\n      for (const [key, [atom]] of atoms) {\r\n        if (areEqual(key, param)) {\r\n          atoms.delete(key);\r\n          notifyListeners(\"REMOVE\", key, atom);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  createAtom.setShouldRemove = (fn) => {\r\n    shouldRemove = fn;\r\n    if (!shouldRemove) return;\r\n    for (const [key, [atom, createdAt]] of atoms) {\r\n      if (shouldRemove(createdAt, key)) {\r\n        atoms.delete(key);\r\n        notifyListeners(\"REMOVE\", key, atom);\r\n      }\r\n    }\r\n  };\r\n  return createAtom;\r\n}\r\n\r\nconst getCached$2 = (c, m, k) => (m.has(k) ? m : m.set(k, c())).get(k);\r\nconst cache1$3 = /* @__PURE__ */ new WeakMap();\r\nconst memo3 = (create, dep1, dep2, dep3) => {\r\n  const cache2 = getCached$2(() => /* @__PURE__ */ new WeakMap(), cache1$3, dep1);\r\n  const cache3 = getCached$2(() => /* @__PURE__ */ new WeakMap(), cache2, dep2);\r\n  return getCached$2(create, cache3, dep3);\r\n};\r\nfunction selectAtom(anAtom, selector, equalityFn = Object.is) {\r\n  return memo3(\r\n    () => {\r\n      const EMPTY = Symbol();\r\n      const selectValue = ([value, prevSlice]) => {\r\n        if (prevSlice === EMPTY) {\r\n          return selector(value);\r\n        }\r\n        const slice = selector(value, prevSlice);\r\n        return equalityFn(prevSlice, slice) ? prevSlice : slice;\r\n      };\r\n      const derivedAtom = atom((get) => {\r\n        const prev = get(derivedAtom);\r\n        const value = get(anAtom);\r\n        return selectValue([value, prev]);\r\n      });\r\n      derivedAtom.init = EMPTY;\r\n      return derivedAtom;\r\n    },\r\n    anAtom,\r\n    selector,\r\n    equalityFn\r\n  );\r\n}\r\n\r\nconst frozenAtoms = /* @__PURE__ */ new WeakSet();\r\nconst deepFreeze = (value) => {\r\n  if (typeof value !== \"object\" || value === null) {\r\n    return value;\r\n  }\r\n  Object.freeze(value);\r\n  const propNames = Object.getOwnPropertyNames(value);\r\n  for (const name of propNames) {\r\n    deepFreeze(value[name]);\r\n  }\r\n  return value;\r\n};\r\nfunction freezeAtom(anAtom) {\r\n  if (frozenAtoms.has(anAtom)) {\r\n    return anAtom;\r\n  }\r\n  frozenAtoms.add(anAtom);\r\n  const origRead = anAtom.read;\r\n  anAtom.read = function(get, options) {\r\n    return deepFreeze(origRead.call(this, get, options));\r\n  };\r\n  if (\"write\" in anAtom) {\r\n    const origWrite = anAtom.write;\r\n    anAtom.write = function(get, set, ...args) {\r\n      return origWrite.call(\r\n        this,\r\n        get,\r\n        (...setArgs) => {\r\n          if (setArgs[0] === anAtom) {\r\n            setArgs[1] = deepFreeze(setArgs[1]);\r\n          }\r\n          return set(...setArgs);\r\n        },\r\n        ...args\r\n      );\r\n    };\r\n  }\r\n  return anAtom;\r\n}\r\nfunction freezeAtomCreator(createAtom) {\r\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n    console.warn(\r\n      \"[DEPRECATED] freezeAtomCreator is deprecated, define it on users end\"\r\n    );\r\n  }\r\n  return (...args) => freezeAtom(createAtom(...args));\r\n}\r\n\r\nconst getCached$1 = (c, m, k) => (m.has(k) ? m : m.set(k, c())).get(k);\r\nconst cache1$2 = /* @__PURE__ */ new WeakMap();\r\nconst memo2$1 = (create, dep1, dep2) => {\r\n  const cache2 = getCached$1(() => /* @__PURE__ */ new WeakMap(), cache1$2, dep1);\r\n  return getCached$1(create, cache2, dep2);\r\n};\r\nconst cacheKeyForEmptyKeyExtractor = {};\r\nconst isWritable = (atom2) => !!atom2.write;\r\nconst isFunction = (x) => typeof x === \"function\";\r\nfunction splitAtom(arrAtom, keyExtractor) {\r\n  return memo2$1(\r\n    () => {\r\n      const mappingCache = /* @__PURE__ */ new WeakMap();\r\n      const getMapping = (arr, prev) => {\r\n        let mapping = mappingCache.get(arr);\r\n        if (mapping) {\r\n          return mapping;\r\n        }\r\n        const prevMapping = prev && mappingCache.get(prev);\r\n        const atomList = [];\r\n        const keyList = [];\r\n        arr.forEach((item, index) => {\r\n          const key = keyExtractor ? keyExtractor(item) : index;\r\n          keyList[index] = key;\r\n          const cachedAtom = prevMapping && prevMapping.atomList[prevMapping.keyList.indexOf(key)];\r\n          if (cachedAtom) {\r\n            atomList[index] = cachedAtom;\r\n            return;\r\n          }\r\n          const read = (get) => {\r\n            const prev2 = get(mappingAtom);\r\n            const currArr = get(arrAtom);\r\n            const mapping2 = getMapping(currArr, prev2 == null ? void 0 : prev2.arr);\r\n            const index2 = mapping2.keyList.indexOf(key);\r\n            if (index2 < 0 || index2 >= currArr.length) {\r\n              const prevItem = arr[getMapping(arr).keyList.indexOf(key)];\r\n              if (prevItem) {\r\n                return prevItem;\r\n              }\r\n              throw new Error(\"splitAtom: index out of bounds for read\");\r\n            }\r\n            return currArr[index2];\r\n          };\r\n          const write = (get, set, update) => {\r\n            const prev2 = get(mappingAtom);\r\n            const arr2 = get(arrAtom);\r\n            const mapping2 = getMapping(arr2, prev2 == null ? void 0 : prev2.arr);\r\n            const index2 = mapping2.keyList.indexOf(key);\r\n            if (index2 < 0 || index2 >= arr2.length) {\r\n              throw new Error(\"splitAtom: index out of bounds for write\");\r\n            }\r\n            const nextItem = isFunction(update) ? update(arr2[index2]) : update;\r\n            if (!Object.is(arr2[index2], nextItem)) {\r\n              set(arrAtom, [\r\n                ...arr2.slice(0, index2),\r\n                nextItem,\r\n                ...arr2.slice(index2 + 1)\r\n              ]);\r\n            }\r\n          };\r\n          atomList[index] = isWritable(arrAtom) ? atom(read, write) : atom(read);\r\n        });\r\n        if (prevMapping && prevMapping.keyList.length === keyList.length && prevMapping.keyList.every((x, i) => x === keyList[i])) {\r\n          mapping = prevMapping;\r\n        } else {\r\n          mapping = { arr, atomList, keyList };\r\n        }\r\n        mappingCache.set(arr, mapping);\r\n        return mapping;\r\n      };\r\n      const mappingAtom = atom((get) => {\r\n        const prev = get(mappingAtom);\r\n        const arr = get(arrAtom);\r\n        const mapping = getMapping(arr, prev == null ? void 0 : prev.arr);\r\n        return mapping;\r\n      });\r\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n        mappingAtom.debugPrivate = true;\r\n      }\r\n      mappingAtom.init = void 0;\r\n      const splittedAtom = isWritable(arrAtom) ? atom(\r\n        (get) => get(mappingAtom).atomList,\r\n        (get, set, action) => {\r\n          switch (action.type) {\r\n            case \"remove\": {\r\n              const index = get(splittedAtom).indexOf(action.atom);\r\n              if (index >= 0) {\r\n                const arr = get(arrAtom);\r\n                set(arrAtom, [\r\n                  ...arr.slice(0, index),\r\n                  ...arr.slice(index + 1)\r\n                ]);\r\n              }\r\n              break;\r\n            }\r\n            case \"insert\": {\r\n              const index = action.before ? get(splittedAtom).indexOf(action.before) : get(splittedAtom).length;\r\n              if (index >= 0) {\r\n                const arr = get(arrAtom);\r\n                set(arrAtom, [\r\n                  ...arr.slice(0, index),\r\n                  action.value,\r\n                  ...arr.slice(index)\r\n                ]);\r\n              }\r\n              break;\r\n            }\r\n            case \"move\": {\r\n              const index1 = get(splittedAtom).indexOf(action.atom);\r\n              const index2 = action.before ? get(splittedAtom).indexOf(action.before) : get(splittedAtom).length;\r\n              if (index1 >= 0 && index2 >= 0) {\r\n                const arr = get(arrAtom);\r\n                if (index1 < index2) {\r\n                  set(arrAtom, [\r\n                    ...arr.slice(0, index1),\r\n                    ...arr.slice(index1 + 1, index2),\r\n                    arr[index1],\r\n                    ...arr.slice(index2)\r\n                  ]);\r\n                } else {\r\n                  set(arrAtom, [\r\n                    ...arr.slice(0, index2),\r\n                    arr[index1],\r\n                    ...arr.slice(index2, index1),\r\n                    ...arr.slice(index1 + 1)\r\n                  ]);\r\n                }\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      ) : atom((get) => get(mappingAtom).atomList);\r\n      return splittedAtom;\r\n    },\r\n    arrAtom,\r\n    keyExtractor || cacheKeyForEmptyKeyExtractor\r\n  );\r\n}\r\n\r\nfunction atomWithDefault(getDefault) {\r\n  const EMPTY = Symbol();\r\n  const overwrittenAtom = atom(EMPTY);\r\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n    overwrittenAtom.debugPrivate = true;\r\n  }\r\n  const anAtom = atom(\r\n    (get, options) => {\r\n      const overwritten = get(overwrittenAtom);\r\n      if (overwritten !== EMPTY) {\r\n        return overwritten;\r\n      }\r\n      return getDefault(get, options);\r\n    },\r\n    (get, set, update) => {\r\n      if (update === RESET) {\r\n        set(overwrittenAtom, EMPTY);\r\n      } else if (typeof update === \"function\") {\r\n        const prevValue = get(anAtom);\r\n        set(overwrittenAtom, update(prevValue));\r\n      } else {\r\n        set(overwrittenAtom, update);\r\n      }\r\n    }\r\n  );\r\n  return anAtom;\r\n}\r\n\r\nconst isPromiseLike$3 = (x) => typeof (x == null ? void 0 : x.then) === \"function\";\r\nfunction withStorageValidator(validator) {\r\n  return (unknownStorage) => {\r\n    const storage = {\r\n      ...unknownStorage,\r\n      getItem: (key, initialValue) => {\r\n        const validate = (value2) => {\r\n          if (!validator(value2)) {\r\n            return initialValue;\r\n          }\r\n          return value2;\r\n        };\r\n        const value = unknownStorage.getItem(key, initialValue);\r\n        if (isPromiseLike$3(value)) {\r\n          return value.then(validate);\r\n        }\r\n        return validate(value);\r\n      }\r\n    };\r\n    return storage;\r\n  };\r\n}\r\nfunction createJSONStorage(getStringStorage = () => {\r\n  try {\r\n    return window.localStorage;\r\n  } catch (e) {\r\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n      if (typeof window !== \"undefined\") {\r\n        console.warn(e);\r\n      }\r\n    }\r\n    return void 0;\r\n  }\r\n}, options) {\r\n  var _a;\r\n  let lastStr;\r\n  let lastValue;\r\n  const storage = {\r\n    getItem: (key, initialValue) => {\r\n      var _a2, _b;\r\n      const parse = (str2) => {\r\n        str2 = str2 || \"\";\r\n        if (lastStr !== str2) {\r\n          try {\r\n            lastValue = JSON.parse(str2, options == null ? void 0 : options.reviver);\r\n          } catch (e) {\r\n            return initialValue;\r\n          }\r\n          lastStr = str2;\r\n        }\r\n        return lastValue;\r\n      };\r\n      const str = (_b = (_a2 = getStringStorage()) == null ? void 0 : _a2.getItem(key)) != null ? _b : null;\r\n      if (isPromiseLike$3(str)) {\r\n        return str.then(parse);\r\n      }\r\n      return parse(str);\r\n    },\r\n    setItem: (key, newValue) => {\r\n      var _a2;\r\n      return (_a2 = getStringStorage()) == null ? void 0 : _a2.setItem(\r\n        key,\r\n        JSON.stringify(newValue, options == null ? void 0 : options.replacer)\r\n      );\r\n    },\r\n    removeItem: (key) => {\r\n      var _a2;\r\n      return (_a2 = getStringStorage()) == null ? void 0 : _a2.removeItem(key);\r\n    }\r\n  };\r\n  const createHandleSubscribe = (subscriber2) => (key, callback, initialValue) => subscriber2(key, (v) => {\r\n    let newValue;\r\n    try {\r\n      newValue = JSON.parse(v || \"\");\r\n    } catch (e) {\r\n      newValue = initialValue;\r\n    }\r\n    callback(newValue);\r\n  });\r\n  let subscriber;\r\n  try {\r\n    subscriber = (_a = getStringStorage()) == null ? void 0 : _a.subscribe;\r\n  } catch (e) {\r\n  }\r\n  if (!subscriber && typeof window !== \"undefined\" && typeof window.addEventListener === \"function\" && window.Storage) {\r\n    subscriber = (key, callback) => {\r\n      if (!(getStringStorage() instanceof window.Storage)) {\r\n        return () => {\r\n        };\r\n      }\r\n      const storageEventCallback = (e) => {\r\n        if (e.storageArea === getStringStorage() && e.key === key) {\r\n          callback(e.newValue);\r\n        }\r\n      };\r\n      window.addEventListener(\"storage\", storageEventCallback);\r\n      return () => {\r\n        window.removeEventListener(\"storage\", storageEventCallback);\r\n      };\r\n    };\r\n  }\r\n  if (subscriber) {\r\n    storage.subscribe = createHandleSubscribe(subscriber);\r\n  }\r\n  return storage;\r\n}\r\nconst defaultStorage = createJSONStorage();\r\nfunction atomWithStorage(key, initialValue, storage = defaultStorage, options) {\r\n  const getOnInit = options == null ? void 0 : options.getOnInit;\r\n  const baseAtom = atom(\r\n    getOnInit ? storage.getItem(key, initialValue) : initialValue\r\n  );\r\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n    baseAtom.debugPrivate = true;\r\n  }\r\n  baseAtom.onMount = (setAtom) => {\r\n    setAtom(storage.getItem(key, initialValue));\r\n    let unsub;\r\n    if (storage.subscribe) {\r\n      unsub = storage.subscribe(key, setAtom, initialValue);\r\n    }\r\n    return unsub;\r\n  };\r\n  const anAtom = atom(\r\n    (get) => get(baseAtom),\r\n    (get, set, update) => {\r\n      const nextValue = typeof update === \"function\" ? update(get(baseAtom)) : update;\r\n      if (nextValue === RESET) {\r\n        set(baseAtom, initialValue);\r\n        return storage.removeItem(key);\r\n      }\r\n      if (isPromiseLike$3(nextValue)) {\r\n        return nextValue.then((resolvedValue) => {\r\n          set(baseAtom, resolvedValue);\r\n          return storage.setItem(key, resolvedValue);\r\n        });\r\n      }\r\n      set(baseAtom, nextValue);\r\n      return storage.setItem(key, nextValue);\r\n    }\r\n  );\r\n  return anAtom;\r\n}\r\n\r\nconst isPromiseLike$2 = (x) => typeof (x == null ? void 0 : x.then) === \"function\";\r\nfunction atomWithObservable(getObservable, options) {\r\n  const returnResultData = (result) => {\r\n    if (\"e\" in result) {\r\n      throw result.e;\r\n    }\r\n    return result.d;\r\n  };\r\n  const observableResultAtom = atom((get) => {\r\n    var _a;\r\n    let observable = getObservable(get);\r\n    const itself = (_a = observable[Symbol.observable]) == null ? void 0 : _a.call(observable);\r\n    if (itself) {\r\n      observable = itself;\r\n    }\r\n    let resolve;\r\n    const makePending = () => new Promise((r) => {\r\n      resolve = r;\r\n    });\r\n    const initialResult = options && \"initialValue\" in options ? {\r\n      d: typeof options.initialValue === \"function\" ? options.initialValue() : options.initialValue\r\n    } : makePending();\r\n    let setResult;\r\n    let lastResult;\r\n    const listener = (result) => {\r\n      lastResult = result;\r\n      resolve == null ? void 0 : resolve(result);\r\n      setResult == null ? void 0 : setResult(result);\r\n    };\r\n    let subscription;\r\n    let timer;\r\n    const isNotMounted = () => !setResult;\r\n    const unsubscribe = () => {\r\n      if (subscription) {\r\n        subscription.unsubscribe();\r\n        subscription = void 0;\r\n      }\r\n    };\r\n    const start = () => {\r\n      if (subscription) {\r\n        clearTimeout(timer);\r\n        subscription.unsubscribe();\r\n      }\r\n      subscription = observable.subscribe({\r\n        next: (d) => listener({ d }),\r\n        error: (e) => listener({ e }),\r\n        complete: () => {\r\n        }\r\n      });\r\n      if (isNotMounted() && (options == null ? void 0 : options.unstable_timeout)) {\r\n        timer = setTimeout(unsubscribe, options.unstable_timeout);\r\n      }\r\n    };\r\n    start();\r\n    const resultAtom = atom(lastResult || initialResult);\r\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n      resultAtom.debugPrivate = true;\r\n    }\r\n    resultAtom.onMount = (update) => {\r\n      setResult = update;\r\n      if (lastResult) {\r\n        update(lastResult);\r\n      }\r\n      if (subscription) {\r\n        clearTimeout(timer);\r\n      } else {\r\n        start();\r\n      }\r\n      return () => {\r\n        setResult = void 0;\r\n        if (options == null ? void 0 : options.unstable_timeout) {\r\n          timer = setTimeout(unsubscribe, options.unstable_timeout);\r\n        } else {\r\n          unsubscribe();\r\n        }\r\n      };\r\n    };\r\n    return [resultAtom, observable, makePending, start, isNotMounted];\r\n  });\r\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n    observableResultAtom.debugPrivate = true;\r\n  }\r\n  const observableAtom = atom(\r\n    (get) => {\r\n      const [resultAtom] = get(observableResultAtom);\r\n      const result = get(resultAtom);\r\n      if (isPromiseLike$2(result)) {\r\n        return result.then(returnResultData);\r\n      }\r\n      return returnResultData(result);\r\n    },\r\n    (get, set, data) => {\r\n      const [resultAtom, observable, makePending, start, isNotMounted] = get(observableResultAtom);\r\n      if (\"next\" in observable) {\r\n        if (isNotMounted()) {\r\n          set(resultAtom, makePending());\r\n          start();\r\n        }\r\n        observable.next(data);\r\n      } else {\r\n        throw new Error(\"observable is not subject\");\r\n      }\r\n    }\r\n  );\r\n  return observableAtom;\r\n}\r\n\r\nconst cache1$1 = /* @__PURE__ */ new WeakMap();\r\nconst memo1 = (create, dep1) => (cache1$1.has(dep1) ? cache1$1 : cache1$1.set(dep1, create())).get(dep1);\r\nconst isPromiseLike$1 = (p) => typeof (p == null ? void 0 : p.then) === \"function\";\r\nconst LOADING = { state: \"loading\" };\r\nfunction loadable(anAtom) {\r\n  return memo1(() => {\r\n    const loadableCache = /* @__PURE__ */ new WeakMap();\r\n    const refreshAtom = atom(0);\r\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n      refreshAtom.debugPrivate = true;\r\n    }\r\n    const derivedAtom = atom(\r\n      (get, { setSelf }) => {\r\n        get(refreshAtom);\r\n        let value;\r\n        try {\r\n          value = get(anAtom);\r\n        } catch (error) {\r\n          return { state: \"hasError\", error };\r\n        }\r\n        if (!isPromiseLike$1(value)) {\r\n          return { state: \"hasData\", data: value };\r\n        }\r\n        const promise = value;\r\n        const cached1 = loadableCache.get(promise);\r\n        if (cached1) {\r\n          return cached1;\r\n        }\r\n        promise.then(\r\n          (data) => {\r\n            loadableCache.set(promise, { state: \"hasData\", data });\r\n            setSelf();\r\n          },\r\n          (error) => {\r\n            loadableCache.set(promise, { state: \"hasError\", error });\r\n            setSelf();\r\n          }\r\n        );\r\n        const cached2 = loadableCache.get(promise);\r\n        if (cached2) {\r\n          return cached2;\r\n        }\r\n        loadableCache.set(promise, LOADING);\r\n        return LOADING;\r\n      },\r\n      (_get, set) => {\r\n        set(refreshAtom, (c) => c + 1);\r\n      }\r\n    );\r\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n      derivedAtom.debugPrivate = true;\r\n    }\r\n    return atom((get) => get(derivedAtom));\r\n  }, anAtom);\r\n}\r\n\r\nconst getCached = (c, m, k) => (m.has(k) ? m : m.set(k, c())).get(k);\r\nconst cache1 = /* @__PURE__ */ new WeakMap();\r\nconst memo2 = (create, dep1, dep2) => {\r\n  const cache2 = getCached(() => /* @__PURE__ */ new WeakMap(), cache1, dep1);\r\n  return getCached(create, cache2, dep2);\r\n};\r\nconst isPromiseLike = (p) => typeof (p == null ? void 0 : p.then) === \"function\";\r\nconst defaultFallback = () => void 0;\r\nfunction unwrap(anAtom, fallback = defaultFallback) {\r\n  return memo2(\r\n    () => {\r\n      const promiseErrorCache = /* @__PURE__ */ new WeakMap();\r\n      const promiseResultCache = /* @__PURE__ */ new WeakMap();\r\n      const refreshAtom = atom(0);\r\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n        refreshAtom.debugPrivate = true;\r\n      }\r\n      const promiseAndValueAtom = atom(\r\n        (get, { setSelf }) => {\r\n          get(refreshAtom);\r\n          const prev = get(promiseAndValueAtom);\r\n          const promise = get(anAtom);\r\n          if (!isPromiseLike(promise)) {\r\n            return { v: promise };\r\n          }\r\n          if (promise !== (prev == null ? void 0 : prev.p)) {\r\n            promise.then(\r\n              (v) => {\r\n                promiseResultCache.set(promise, v);\r\n                setSelf();\r\n              },\r\n              (e) => {\r\n                promiseErrorCache.set(promise, e);\r\n                setSelf();\r\n              }\r\n            );\r\n          }\r\n          if (promiseErrorCache.has(promise)) {\r\n            throw promiseErrorCache.get(promise);\r\n          }\r\n          if (promiseResultCache.has(promise)) {\r\n            return {\r\n              p: promise,\r\n              v: promiseResultCache.get(promise)\r\n            };\r\n          }\r\n          if (prev && \"v\" in prev) {\r\n            return { p: promise, f: fallback(prev.v), v: prev.v };\r\n          }\r\n          return { p: promise, f: fallback() };\r\n        },\r\n        (_get, set) => {\r\n          set(refreshAtom, (c) => c + 1);\r\n        }\r\n      );\r\n      promiseAndValueAtom.init = void 0;\r\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n        promiseAndValueAtom.debugPrivate = true;\r\n      }\r\n      return atom(\r\n        (get) => {\r\n          const state = get(promiseAndValueAtom);\r\n          if (\"f\" in state) {\r\n            return state.f;\r\n          }\r\n          return state.v;\r\n        },\r\n        (_get, set, ...args) => set(anAtom, ...args)\r\n      );\r\n    },\r\n    anAtom,\r\n    fallback\r\n  );\r\n}\r\n\r\nfunction atomWithRefresh(read, write) {\r\n  const refreshAtom = atom(0);\r\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n    refreshAtom.debugPrivate = true;\r\n  }\r\n  return atom(\r\n    (get, options) => {\r\n      get(refreshAtom);\r\n      return read(get, options);\r\n    },\r\n    (get, set, ...args) => {\r\n      if (args.length === 0) {\r\n        set(refreshAtom, (c) => c + 1);\r\n      } else if (write) {\r\n        return write(get, set, ...args);\r\n      } else if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n        throw new Error(\"refresh must be called without arguments\");\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nfunction atomWithLazy(makeInitial) {\r\n  const a = atom(void 0);\r\n  delete a.init;\r\n  Object.defineProperty(a, \"init\", {\r\n    get() {\r\n      return makeInitial();\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\nexport { RESET, atomFamily, atomWithDefault, atomWithLazy, atomWithObservable, atomWithReducer, atomWithRefresh, atomWithReset, atomWithStorage, createJSONStorage, freezeAtom, freezeAtomCreator, loadable, selectAtom, splitAtom, withStorageValidator as unstable_withStorageValidator, unwrap };\r\n", "'use client';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useSetAtom, useAtom, useStore } from 'jotai/react';\r\nimport { RESET } from 'jotai/vanilla/utils';\r\nimport { atom } from 'jotai/vanilla';\r\n\r\nfunction useResetAtom(anAtom, options) {\r\n  const setAtom = useSetAtom(anAtom, options);\r\n  const resetAtom = useCallback(() => setAtom(RESET), [setAtom]);\r\n  return resetAtom;\r\n}\r\n\r\nfunction useReducerAtom(anAtom, reducer, options) {\r\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n    console.warn(\r\n      \"[DEPRECATED] useReducerAtom is deprecated and will be removed in the future. Please create your own version using the recipe. https://github.com/pmndrs/jotai/pull/2467\"\r\n    );\r\n  }\r\n  const [state, setState] = useAtom(anAtom, options);\r\n  const dispatch = useCallback(\r\n    (action) => {\r\n      setState((prev) => reducer(prev, action));\r\n    },\r\n    [setState, reducer]\r\n  );\r\n  return [state, dispatch];\r\n}\r\n\r\nfunction useAtomCallback(callback, options) {\r\n  const anAtom = useMemo(\r\n    () => atom(null, (get, set, ...args) => callback(get, set, ...args)),\r\n    [callback]\r\n  );\r\n  return useSetAtom(anAtom, options);\r\n}\r\n\r\nconst hydratedMap = /* @__PURE__ */ new WeakMap();\r\nfunction useHydrateAtoms(values, options) {\r\n  const store = useStore(options);\r\n  const hydratedSet = getHydratedSet(store);\r\n  for (const [atom, value] of values) {\r\n    if (!hydratedSet.has(atom) || (options == null ? void 0 : options.dangerouslyForceHydrate)) {\r\n      hydratedSet.add(atom);\r\n      store.set(atom, value);\r\n    }\r\n  }\r\n}\r\nconst getHydratedSet = (store) => {\r\n  let hydratedSet = hydratedMap.get(store);\r\n  if (!hydratedSet) {\r\n    hydratedSet = /* @__PURE__ */ new WeakSet();\r\n    hydratedMap.set(store, hydratedSet);\r\n  }\r\n  return hydratedSet;\r\n};\r\n\r\nexport { useAtomCallback, useHydrateAtoms, useReducerAtom, useResetAtom };\r\n"],
  "mappings": "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",
  "names": ["atom", "atom"]
}
